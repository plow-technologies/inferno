{-# LANGUAGE DerivingVia #-}

module Inferno.Types.Type
  ( BaseType (..),
    ImplType (..),
    Namespace (..),
    TCScheme (..),
    TV (..),
    RestOfRecord (..),
    InfernoType (..),
    TypeClass (..),
    TypeClassShape (..),
    TypeMetadata (..),
    Substitutable (..),
    Subst (..),
    Scheme (..),
    (.->),
    sch,
    var,
    tySig,
    namespaceToIdent,
    typeInt,
    typeBool,
    typeDouble,
    typeWord16,
    typeWord32,
    typeWord64,
    typeText,
    typeResolution,
    typeTimeDiff,
    typeTime,
    punctuate',
  )
where

import Inferno.Types.Syntax
  ( BaseType (..),
    ImplType (..),
    InfernoType (..),
    Namespace (..),
    RestOfRecord (..),
    Scheme (..),
    Subst (..),
    Substitutable (..),
    TCScheme (..),
    TV (..),
    TypeClass (..),
    TypeClassShape (..),
    TypeMetadata (..),
    namespaceToIdent,
    punctuate',
    sch,
    tySig,
    typeBool,
    typeDouble,
    typeInt,
    typeResolution,
    typeText,
    typeTime,
    typeTimeDiff,
    typeWord16,
    typeWord32,
    typeWord64,
    var,
    (.->),
  )
