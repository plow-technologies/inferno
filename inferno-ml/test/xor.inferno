open ML in
// These are the parameters from a model trained offline with hasktorch + Haskell:
let w1 = asTensor2 [[-1.1163   ,  1.1485   ], [-1.5528   ,  1.6075   ]] in
let b1 = asTensor1 [-0.5647   ,  0.8927   ] in
let w2 = asTensor2 [[ 1.2794   , -1.1922   ]] in
let b2 = asTensor1 [ 1.5040   ] in
// This is an inferno function that runs inference using the trained model:
let mlp = fun x ->
  let y1 = add (matmul x (transpose2D w1)) b1 in
  let y2 = add (matmul (tanH y1) (transpose2D w2)) b2 in
  y2
in
// Let's check that it computes XOR correctly on some inputs:
let inputs = [
  asTensor1 [0, 0],
  asTensor1 [0, 1],
  asTensor1 [1, 0],
  asTensor1 [1, 1]]
in
Array.map mlp inputs
// Expected: [0, 1, 1, 0]